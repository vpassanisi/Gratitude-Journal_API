{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\LoggedInSidebar.svelte",
    "..\\..\\LoggedOutSidebar.svelte",
    "..\\..\\Entries.svelte",
    "..\\..\\Label.svelte",
    "..\\..\\Underline.svelte",
    "..\\..\\EditModal.svelte",
    "..\\..\\Snackbar.svelte",
    "..\\..\\ProgressLinear.svelte",
    "..\\..\\Icon.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { fly, fade } from \"svelte/transition\";\r\n  import { link } from \"svelte-spa-router\";\r\n  import dark from \"smelte/src/dark.js\";\r\n  import Button from \"smelte/src/components/Button\";\r\n\r\n  export let sidebar_show;\r\n  export let sidebar;\r\n  export let logout;\r\n\r\n  const darkMode = dark();\r\n\r\n  function overlay_click(e) {\r\n    if (\"close\" in e.target.dataset) sidebar();\r\n    console.log($darkMode);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  nav {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    padding: 2rem 0rem 0rem;\r\n    border-left: 1px solid #aaa;\r\n    background: #fff;\r\n    overflow-y: auto;\r\n    width: 16rem;\r\n    z-index: 11;\r\n  }\r\n\r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    z-index: 10;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n\r\n{#if sidebar_show}\r\n  <div\r\n    class=\"modal-overlay\"\r\n    data-close\r\n    on:click={overlay_click}\r\n    transition:fade={{ duration: 150 }} />\r\n  <nav class=\"dark:bg-dark-500\" transition:fly={{ x: -300, opacity: 1 }}>\r\n    <div class=\"flex items-center justify-center w-full mb-8\">\r\n      {#if $darkMode}\r\n        <Button\r\n          flat\r\n          bind:value={$darkMode}\r\n          icon=\"brightness_low\"\r\n          color=\"blue-500\" />\r\n      {:else}\r\n        <Button\r\n          flat\r\n          iconClass=\"text-black\"\r\n          bind:value={$darkMode}\r\n          icon=\"brightness_high\"\r\n          color=\"blue-500\" />\r\n      {/if}\r\n    </div>\r\n    <ul>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 transition duration-100 ease-in-out pl-4 flex\r\n          h-full w-full items-center\"\r\n          href=\"/\"\r\n          use:link\r\n          on:click={(logout(), sidebar())}>\r\n          Logout\r\n        </a>\r\n      </li>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 transition duration-100 ease-in-out pl-4 flex\r\n          h-full w-full items-center\"\r\n          href=\"/journal\"\r\n          use:link\r\n          on:click={sidebar()}>\r\n          Journal\r\n        </a>\r\n      </li>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 pl-4 transition duration-100 ease-in-out flex\r\n          h-full w-full items-center\"\r\n          href=\"/\"\r\n          use:link\r\n          on:click={sidebar()}>\r\n          Info\r\n        </a>\r\n      </li>\r\n      <hr />\r\n\r\n    </ul>\r\n    <!-- <button bind:value={$darkMode}>DarkMode</button> -->\r\n\r\n  </nav>\r\n{/if}\r\n",
    "<script>\r\n  import { fly, fade } from \"svelte/transition\";\r\n  import { link } from \"svelte-spa-router\";\r\n  import dark from \"smelte/src/dark.js\";\r\n  import Button from \"smelte/src/components/Button\";\r\n\r\n  export let sidebar_show;\r\n  export let sidebar;\r\n\r\n  const darkMode = dark();\r\n\r\n  function overlay_click(e) {\r\n    if (\"close\" in e.target.dataset) sidebar();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  nav {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    padding: 2rem 0rem 0rem;\r\n    border-left: 1px solid #aaa;\r\n    background: #fff;\r\n    overflow-y: auto;\r\n    width: 16rem;\r\n    z-index: 11;\r\n  }\r\n\r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    z-index: 10;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n\r\n{#if sidebar_show}\r\n  <div\r\n    class=\"modal-overlay\"\r\n    data-close\r\n    on:click={overlay_click}\r\n    transition:fade={{ duration: 150 }} />\r\n  <nav class=\"dark:bg-dark-500\" transition:fly={{ x: -300, opacity: 1 }}>\r\n    <div class=\"flex items-center justify-center w-full mb-8\">\r\n      {#if $darkMode}\r\n        <Button\r\n          flat\r\n          bind:value={$darkMode}\r\n          icon=\"brightness_low\"\r\n          color=\"blue-500\" />\r\n      {:else}\r\n        <Button\r\n          flat\r\n          iconClass=\"text-black\"\r\n          bind:value={$darkMode}\r\n          icon=\"brightness_high\"\r\n          color=\"blue-500\" />\r\n      {/if}\r\n    </div>\r\n    <ul>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 transition duration-100 ease-in-out pl-4 flex\r\n          h-full w-full items-center\"\r\n          href=\"/newUser\"\r\n          use:link\r\n          on:click={sidebar()}>\r\n          New User\r\n        </a>\r\n      </li>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 transition duration-100 ease-in-out pl-4 flex\r\n          h-full w-full items-center\"\r\n          href=\"/login\"\r\n          use:link\r\n          on:click={sidebar()}>\r\n          Login\r\n        </a>\r\n      </li>\r\n      <hr />\r\n      <li class=\"h-16\">\r\n        <a\r\n          class=\"hover:bg-gray-500 transition duration-100 ease-in-out pl-4 flex\r\n          h-full w-full items-center\"\r\n          href=\"/\"\r\n          use:link\r\n          on:click={sidebar()}>\r\n          Info\r\n        </a>\r\n      </li>\r\n      <hr />\r\n    </ul>\r\n  </nav>\r\n{/if}\r\n",
    "<script>\r\n  import Entry from \"./Entry.svelte\";\r\n  import ProgressLinear from \"smelte/src/components/progressLinear\";\r\n\r\n  export let entries = [];\r\n  export let deleteEntry;\r\n  export let editEntry;\r\n</script>\r\n\r\n<style>\r\n  @media only screen and (min-width: 1024px) {\r\n    .height {\r\n      height: 95vh;\r\n    }\r\n  }\r\n</style>\r\n\r\n<ul class=\"w-full lg:w-1/2 height lg:overflow-y-scroll\">\r\n  {#each entries as entry, i}\r\n    <Entry {entry} {i} {deleteEntry} {editEntry} />\r\n  {/each}\r\n  <div id=\"loader\" class=\"h-72 w-full flex justify-center items-center hidden\">\r\n    <ProgressLinear color=\"secondary\" />\r\n  </div>\r\n</ul>\r\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export { className as class };\n  export let focused = false;\n  export let error = false;\n  export let outlined = false;\n  export let labelOnTop = false;\n  export let prepend = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n\n  let labelDefault = `pt-4 absolute top-0 label-transition block pb-2 px-4 pointer-events-none cursor-text`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let labelClasses = labelDefault;\n\n  const { bg, border, txt, caret } = utils(color);\n\n  const l = new ClassBuilder(labelClasses, labelDefault);\n\n  let lClasses = i => i;\n\n  $: lClasses = l\n    .flush()\n    .add(txt(), focused && !error)\n    .add(\"text-error-500\", focused && error)\n    .add(\"label-top text-xs\", labelOnTop)\n    .remove(\"pt-4 pb-2 px-4 px-1 pt-0\", labelOnTop && outlined)\n    .add(\n      `ml-3 p-1 pt-0 mt-0 bg-${bgColor} dark:bg-dark-500`,\n      labelOnTop && outlined\n    )\n    .remove(\"px-4\", prepend)\n    .add(\"pr-4 pl-10\", prepend)\n    .add(add)\n    .remove(remove)\n    .replace(replace)\n    .get();\n\n  const props = filterProps(\n    [\"focused\", \"error\", \"outlined\", \"labelOnTop\", \"prepend\", \"color\"],\n    $$props\n  );\n</script>\n\n<style>\n  .label-top {\n    line-height: 0.05;\n  }\n  .label-transition {\n    transition: font-size 0.05s, line-height 0.1s;\n  }\n</style>\n\n<label class=\"{lClasses} {className}\" {...props}>\n  <slot />\n</label>\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export {className as class};\n  export let noUnderline = false;\n  export let outlined = false;\n  export let focused = false;\n  export let error = false;\n  export let color = \"primary\";\n\n  let defaultClasses = `mx-auto w-0`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let lineClasses = defaultClasses;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(lineClasses, defaultClasses);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('bg-error-500', error)\n      .add('w-full', focused || error)\n      .add(bg(), focused)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'bgcolor',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.line {\n  height: 1px;\n}\n</style>\n\n<div\n  class=\"line absolute bottom-0 left-0 w-full bg-gray-600 {className}\"\n  class:hidden={noUnderline || outlined}>\n  <div\n    class=\"{classes}\"\n    style=\"height: 2px; transition: width .2s ease\" />\n</div>",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import TextField from \"smelte/src/components/TextField\";\r\n  import Button from \"smelte/src/components/Button\";\r\n\r\n  function overlay_click(e) {\r\n    if (\"close\" in e.target.dataset) show = false;\r\n  }\r\n\r\n  export let show = false;\r\n  export let editEntry;\r\n  export let entry;\r\n  export let i;\r\n</script>\r\n\r\n<style>\r\n  .modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    z-index: 10;\r\n  }\r\n  .editEntry {\r\n    margin-top: 10vh;\r\n  }\r\n</style>\r\n\r\n{#if show}\r\n  <div>\r\n    <div\r\n      class=\"modal-overlay\"\r\n      data-close\r\n      on:click={overlay_click}\r\n      transition:fade={{ duration: 150 }}>\r\n      <div\r\n        class=\"flex flex-col bg-white dark:bg-dark-500 w-5/6 max-w-2xl p-8\r\n        mx-auto editEntry rounded\">\r\n        <div class=\"font-hairline text-2xl text-center\">Edit Entry</div>\r\n        <TextField outlined label=\"subject\" bind:value={entry.subject} />\r\n        <TextField\r\n          outlined\r\n          textarea\r\n          label=\"description\"\r\n          bind:value={entry.description} />\r\n        <Button\r\n          color=\"secondary\"\r\n          on:click={(editEntry(entry, entry._id, i), () => (show = false))}>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n",
    "<script context=\"module\">\n  import { writable } from \"svelte/store\";\n  \n  const queue = writable([]);\n  let running = false;\n</script>\n\n<script>\n  import { fade, scale } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import Button from \"../Button\";\n  import { Spacer } from \"../Util\";\n  import utils, { ClassBuilder } from \"../../utils/classes.js\";\n\n  export let value = false;\n  export let timeout = 2000;\n  export let inProps = { duration: 100, easing: quadIn };\n  export let outProps = { duration: 100, easing: quadOut, delay: 150 };\n  export let color = \"gray\";\n  export let text = \"white\";\n  export let top = false;\n  export let bottom = true;\n  export let right = false;\n  export let left = false;\n  export let noAction = true;\n  export let hash = false;\n\n  const dispatch = createEventDispatcher();\n\n  const classesDefault = `pointer-events-auto flex absolute py-2 px-4 z-30 mb-4 content-between mx-auto\n      rounded items-center elevation-2 h-12`;\n  const wrapperDefault = \"fixed w-full h-full flex items-center justify-center pointer-events-none\";\n\n  let className = classesDefault;\n  export {className as class};\n  export let classes = wrapperDefault;\n\n  const cb = new ClassBuilder(className, classesDefault);\n  const wrapperCb = new ClassBuilder(classes, wrapperDefault);\n\n  let wClasses = i => i;\n  let tm;\n  let node;\n\n  let bg = () => {};\n\n  $: {\n    const u = utils(color || \"gray\");\n    bg = u.bg;\n  }\n\n  $: {\n    hash = hash || (value ? btoa(`${value}${new Date().valueOf()}`) : null);\n    value = value;\n  }\n\n  $: toggler = () => toggle(value, hash);\n\n  $: if (value) {\n    queue.update(u => [...u, toggler]);\n  }\n\n  $: if (!running && value && $queue.length) {\n    $queue.shift()();\n  }\n\n  $: if (!value) clearTimeout(tm);\n\n  function toggle(h, id) {\n    if (value === false && running === false) {\n      return;\n    }\n    hash = running = value = id;\n\n    if (!timeout) return;\n\n    tm = setTimeout(() => {\n      value = running = hash = false;\n      dispatch(\"finish\");\n\n      if ($queue.length) {\n        $queue.shift()();\n      }\n    }, timeout);\n  }\n\n  $: c = cb\n      .flush()\n      .add(bg(800), color)\n      .add(\"right-0 mr-2\", right)\n      .add(\"top-0 mt-2\", top)\n      .add(\"left-0 ml-2\", left)\n      .add(\"bottom-0\", bottom)\n      .add(\"snackbar\", !noAction)\n      .get();\n\n  // for some reason it doesn't get updated otherwise\n  $: if (node) node.classList = c;\n\n  wClasses = wrapperCb\n    .flush()\n    .add(`text-${text}`)\n    .get();\n</script>\n\n<style>\n  .snackbar {\n    min-width: 344px;\n  }\n</style>\n\n{#if value && (running === hash)}\n  <div\n    class=\"fixed w-full h-full top-0 left-0 z-30 pointer-events-none\"\n  >\n    <div class={wClasses}>\n      <div\n        bind:this={node}\n        in:scale={inProps}\n        out:fade={outProps}\n        on:click={() => value = false}>\n        <slot /> \n        {#if !noAction}\n          <Spacer />\n          <slot name=\"action\">\n            {#if !timeout}\n              <Button text on:click={() => value = false}>Close</Button>\n            {/if}\n          </slot>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { slide } from \"svelte/transition\";\n\n  export let app = false;\n  export let progress = 0;\n  export let color = \"primary\";\n\n  let initialized = false;\n\n  onMount(() => {\n    if (!app) return;\n\n    setTimeout(() => {\n      initialized = true;\n    }, 200);\n  });\n</script>\n\n<style>\n  /* kudos https://codepen.io/shalimano/pen/wBmNGJ */\n  .inc {\n    animation: increase 2s ease-in-out infinite;\n  }\n  .dec {\n    animation: decrease 2s 0.9s ease-in-out infinite;\n  }\n\n  @keyframes increase {\n    from {\n      left: -5%;\n      width: 5%;\n    }\n    to {\n      left: 130%;\n      width: 150%;\n    }\n  }\n  @keyframes decrease {\n    from {\n      left: -90%;\n      width: 90%;\n    }\n    to {\n      left: 110%;\n      width: 10%;\n    }\n  }\n</style>\n\n<div\n  class:fixed={app}\n  class:z-50={app}\n  class=\"top-0 left-0 w-full h-1 bg-{color}-100 overflow-hidden relative\"\n  class:hidden={app && !initialized}\n  transition:slide={{ duration: 300 }}>\n  <div\n    class=\"bg-{color}-500 h-1 absolute\"\n    class:inc={!progress}\n    class:transition={progress}\n    style={progress ? `width: ${progress}%` : \"\"} />\n  <div class=\"bg-{color}-500 h-1 absolute dec\" class:hidden={progress} />\n</div>\n",
    "<script>\n  let className = \"\";\n  export {className as class};\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl {className} transition\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n"
  ],
  "names": [],
  "mappings": "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"
}